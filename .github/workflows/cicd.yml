name: CICD

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'alpha'
      - 'beta'
      - 'dev'
  pull_request:
    types: [opened, reopened, synchronize]
  merge_group:

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json

    - name: .NET Build
      run: dotnet build -c Release

    - name: .NET Test
      run: dotnet test -c Release --collect:"XPlat Code Coverage"

    - name: Coverage
      uses: codecov/codecov-action@v3
      with:
        file: coverage.cobertura.xml

  create-release:
    if: ${{ github.event_name != 'pull_request' }}
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-test
    steps:
    - uses: actions/checkout@v3

    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v3
      id: semantic
      with:
        dry_run: true
        extra_plugins: |
          @semantic-release/changelog
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: .NET Pack
      working-directory: src/TSDParser
      run: dotnet pack -c Release -p:Version=${{ (steps.semantic.outputs.new_release_published && steps.semantic.outputs.new_release_version) || '0.0.1' }}

    - name: .NET NuGet Push
      if: steps.semantic.outputs.new_release_published == 'true'
      working-directory: src/TSDParser/bin/Release
      run: dotnet nuget push *.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }}

    - name: Semantic Release
      if: steps.semantic.outputs.new_release_published == 'true'
      uses: cycjimmy/semantic-release-action@v3
      with:
        extra_plugins: |
          @semantic-release/changelog
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/upload-artifact@v3
      with:
        name: NuGet Package
        path: src/**/*.nupkg
